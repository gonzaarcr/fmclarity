openapi: 3.0.3
info:
  title: CRUD challenge
  description: |-
    CRUD challenge for interview
  version: 1.0.11
servers:
  - url: https://www.crudcrud.com/api/217e4984a32a47ab9dda2e638b3e144f
tags:
  - name: contractors
    description: Contractors
  - name: services
    description: Contractor's services
paths:
  /contractors:
    post:
      tags:
        - contractor
      summary: Create contractor
      description: Create contractor
      operationId: createContractor
      requestBody:
        description: Created contractor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractorForm'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '400':
          description: Endpoint has exceeded allowed number of requests
    get:
      tags:
        - contractor
      summary: Get all contractors
      description: Get all contractors
      operationId: getContractors
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contractor'
        '400':
          description: Endpoint has exceeded allowed number of requests
  /contractors/{id}:
    get:
      tags:
        - contractor
      summary: Get contractor by id
      description: Get contractor by id
      operationId: getContractor
      parameters:
        - name: id
          in: path
          description: ID of contractor to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contractor'
        '400':
          description: Endpoint has exceeded allowed number of requests
        '404':
          description: Invalid id
    put:
      tags:
        - contractor
      summary: Edit contractors
      description: Edit contractors
      operationId: putContractors
      parameters:
        - name: id
          in: path
          description: ID of contractor to edit
          required: true
          schema:
            type: string
      requestBody:
        description: Field to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractorForm'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contractor'
        '400':
          description: Endpoint has exceeded allowed number of requests
        '404':
          description: Invalid id
  /services:
    get:
      tags:
        - services
      summary: Get list of services for a contractor
      description: Get list of services for a contractor
      operationId: getServices
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
        '400':
          description: Endpoint has exceeded allowed number of requests

components:
  schemas:
    Contractor:
      required:
        - _id
        - name
        - email
        - telephone
        - services
      type: object
      properties:
        _id:
          type: string
          example: 673ee92bd0267903e85b3ffb
        name:
          type: string
        telephone:
          type: string
          format: phone
          example: +6155555555
        email:
          type: string
          format: email
          example: name@domain.com
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    ContractorForm:
      required:
        - name
        - email
        - telephone
        - services
      type: object
      properties:
        name:
          type: string
        telephone:
          type: string
          format: phone
          example: +6155555555
        email:
          type: string
          format: email
          example: name@domain.com
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    Service:
      type: string
      example: "Service 1"
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    Contractor:
      description: Contrctor object to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contractor'
